Global:
  use_gpu: true
  epoch_num: 500
  log_smooth_window: 20
  print_batch_step: 10
  save_model_dir: ./checkpoint/nb_GaussNoise
  save_epoch_step: 5
  # evaluation is run every 5000 iterations after the 4000th iteration
  eval_batch_step: [0, 500]
  cal_metric_during_train: True
  pretrained_model:
  checkpoints: 
  save_inference_dir:
  use_visualdl: False
  infer_img: doc/imgs_words/ch/word_1.jpg
  # for data or label process
  character_dict_path: ppocr/utils/ppocr_keys_new.txt
  character_type: ch
  max_text_length: 25
  infer_mode: False
  use_space_char: False
  save_res_path: ./output/rec/predicts_chinese_lite_v2.0.txt


Optimizer:
  name: Adam
  beta1: 0.9
  beta2: 0.999
  lr:
    name: CyclicalCosine
    learning_rate: 0.002
    cycle: 50
  regularizer:
    name: 'L2'
    factor: 0.00001

Architecture:
  model_type: rec
  algorithm: CRNN
  Transform:
  Backbone:
    name: MobileNetV3
    scale: 0.5
    model_name: small
    small_stride: [1, 2, 2, 2]
  Neck:
    name: SequenceEncoder
    encoder_type: rnn
    hidden_size: 48
  Head:
    name: CTCHead
    fc_decay: 0.00001

Loss:
  name: CTCLoss

PostProcess:
  name: CTCLabelDecode

Metric:
  name: RecMetric
  main_indicator: acc

Train:
  dataset:
    name: SimpleDataSet
    data_dir: ./data/train_data/TrainImages/
    label_file_list: ["./data/train_data/train.txt"]
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      # - RecAug:
      - Tia:
          aug_prob: 0.4
          distort: True
          stretch: True
          perspective: True
          size_thres: [20, 20]
      - HeightCrop:
          aug_prob: 0.4
          size_thres: [20, 20]
      - Iaa_AdditiveGaussianNoise:
          aug_prob: 0.5
          loc: 0
          scale: [0, 25.5]
          per_channel: True 
      - GaussBlur:
          aug_prob: 0.4
          size_thres: [20, 20]
          kernel_size: [5, 5]
      - Color:
          aug_prob: 0.4
          delta_control: 0.0001
      - ShiftJitter:
          aug_prob: 1.0
          size_thres: [10, 10]
          shift_control: 0.01
      # - GaussNoise:
      #     aug_prob: 0.4
      #     mean: 0
      #     var: 0.1
      - PixelReverse:
          aug_prob: 0.4
      - CTCLabelEncode: # Class handling label
      - RecResizeImg:
          image_shape: [3, 32, 320]
      - KeepKeys:
          keep_keys: ['image', 'label', 'length'] # dataloader will return list in this order
  loader:
    shuffle: True
    batch_size_per_card: 256
    drop_last: True
    num_workers: 8

Eval:
  dataset:
    name: SimpleDataSet
    data_dir: ./data/train_data/TrainImages/
    label_file_list: ["./data/train_data/val.txt"]
    transforms:
      - DecodeImage: # load image
          img_mode: BGR
          channel_first: False
      - CTCLabelEncode: # Class handling label
      - RecResizeImg:
          image_shape: [3, 32, 320]
      - KeepKeys:
          keep_keys: ['image', 'label', 'length'] # dataloader will return list in this order
  loader:
    shuffle: False
    drop_last: False
    batch_size_per_card: 256
    num_workers: 8
